/*-------------TRABALHO CONSULTAS DE BANCO---------------*/
/*ALUNO:SANDRO MATHEUS RAMOS   CURSO:ENG S0FT  5º PERÍODO*/

---------------------------CRIAÇÃO DA TABELA

CREATE TABLE TRABALHO_QUERY_NF (
    ID_NF NUMERIC(10,0),
    ID_ITEM NUMERIC(10,0),
    COD_PROD NUMERIC(10,0),
    VALOR_UNIT NUMERIC(10,2),
    QUANTIDADE NUMERIC(10,2),
    PERCENT_DESCONTO NUMERIC(6,2)
);

---------------------------INSERT'S

INSERT INTO TRABALHO_QUERY_NF VALUES
    (1,1,1,25.00,10,5),
    (1,2,2,13.50,3,NULL),
    (1,3,3,15.00,2,NULL),
    (1,4,4,10.00,1,NULL),
    (1,5,5,30.00,1,NULL),
    (2,1,3,15.00,4,NULL),
    (2,2,4,10.00,5,NULL),
    (2,3,5,30.00,7,NULL),
    (3,1,1,25.00,5,NULL),
    (3,2,4,10.00,4,NULL),
    (3,3,5,30.00,5,NULL),
    (3,4,2,13.50,7,NULL),
    (4,1,5,30.00,10,15),
    (4,2,4,10.00,12,5),
    (4,3,1,25.00,13,5),
    (4,4,2,13.50,15,5),
    (5,1,3,15.00,3,NULL),
    (5,2,5,30.00,6,NULL),
    (6,1,1,25.00,22,15),
    (6,2,3,15.00,25,20),
    (7,1,1,25.00,10,3),
    (7,2,2,13.50,10,4),
    (7,3,3,15.00,10,4),
    (7,4,4,30.00,10,1);

---------------------------CRIANDO FUNÇÕES

CREATE FUNCTION CALC_VALOR_VENDIDO(VALOR_UNIT NUMERIC, PERCENT_DESCONTO NUMERIC) 
RETURNS NUMERIC AS $$
BEGIN

    RETURN VALOR_UNIT - (VALOR_UNIT * (PERCENT_DESCONTO/100));

END;
$$ LANGUAGE plpgsql;

CREATE FUNCTION CALC_VALOR_TOTAL(QUANTIDADE NUMERIC, VALOR_UNIT NUMERIC) 
RETURNS NUMERIC AS $$
BEGIN

    RETURN QUANTIDADE * VALOR_UNIT;

END;
$$ LANGUAGE plpgsql;

---------------------------PERGUNTAS & RESPOSTAS

---LETRA A
SELECT ID_NF, ID_ITEM, COD_PROD, VALOR_UNIT 
    FROM TRABALHO_QUERY_NF 
   WHERE PERCENT_DESCONTO IS NULL;

---LETRA B
SELECT ID_NF, ID_ITEM, COD_PROD, VALOR_UNIT, 
       ROUND(CALC_VALOR_VENDIDO(VALOR_UNIT, PERCENT_DESCONTO),2) AS VALOR_VENDIDO
    FROM TRABALHO_QUERY_NF 
   WHERE PERCENT_DESCONTO NOTNULL;

---LETRA C
UPDATE TRABALHO_QUERY_NF
    SET PERCENT_DESCONTO = 0
   WHERE PERCENT_DESCONTO IS NULL;

---LETRA D
SELECT ID_NF, ID_ITEM, COD_PROD, VALOR_UNIT,
       CALC_VALOR_TOTAL(QUANTIDADE, VALOR_UNIT) AS VALOR_TOTAL, PERCENT_DESCONTO, 
       ROUND(CALC_VALOR_VENDIDO(VALOR_UNIT, PERCENT_DESCONTO),2) AS VALOR_VENDIDO
    FROM TRABALHO_QUERY_NF;   

---LETRA E
SELECT ID_NF, ROUND(SUM(VALOR_TOTAL),2) TOTAL_NF
    FROM (SELECT ID_NF, CALC_VALOR_TOTAL(QUANTIDADE, VALOR_UNIT) AS VALOR_TOTAL
            FROM TRABALHO_QUERY_NF
          GROUP BY ID_NF,QUANTIDADE,VALOR_UNIT) AS FIRST_GROUP_BY
    GROUP BY ID_NF
    ORDER BY TOTAL_NF DESC      
;

---LETRA F - NÃO ENTENDI DIREITO O ENUNCIADO :c 
SELECT ID_NF, SUM(VALOR_VENDIDO) VALOR_VENDIDO_NF
    FROM (SELECT ID_NF, CALC_VALOR_VENDIDO(VALOR_UNIT, PERCENT_DESCONTO) AS VALOR_VENDIDO
            FROM TRABALHO_QUERY_NF
          GROUP BY ID_NF,PERCENT_DESCONTO,VALOR_UNIT) AS FIRST_GROUP_BY
    GROUP BY ID_NF
    ORDER BY VALOR_VENDIDO_NF DESC      
;

--=====================================CONTIAÇÃO LETRA G ATÉ A LETRA L

---LETRA G 
SELECT COD_PROD, ROUND(SUM(QUANTIDADE),0) AS QUANTIDADE
    FROM TRABALHO_QUERY_NF
    GROUP BY COD_PROD
    ORDER BY QUANTIDADE DESC
    LIMIT 1
;

--LETRA H
SELECT ID_NF, COD_PROD, QUANTIDADE
    FROM (SELECT ID_NF, COD_PROD, ROUND(SUM(QUANTIDADE),0) AS QUANTIDADE
            FROM TRABALHO_QUERY_NF
            GROUP BY ID_NF, COD_PROD) AS SUM_QUANTIDADE
   WHERE QUANTIDADE > 10         
    ORDER BY QUANTIDADE DESC
;

--LETRA I
SELECT ID_NF, VALOR_TOT
    FROM (SELECT ID_NF, ROUND(SUM(CALC_VALOR_TOTAL(QUANTIDADE, VALOR_UNIT)),2) AS VALOR_TOT
            FROM TRABALHO_QUERY_NF
          GROUP BY ID_NF) AS TOTAL_NF_SUB_QUERY
   WHERE VALOR_TOT > 500       
    GROUP BY ID_NF, VALOR_TOT
    ORDER BY VALOR_TOT DESC      
;

--LETRA J
SELECT COD_PROD, ROUND(AVG(PERCENT_DESCONTO),2) AS MEDIA
    FROM TRABALHO_QUERY_NF
   GROUP BY COD_PROD; 

--LETRA K
SELECT COD_PROD,
       MIN(ROUND(PERCENT_DESCONTO,2)) AS MENOR,
       MAX(ROUND(PERCENT_DESCONTO,2)) AS MAIOR, 
       ROUND(AVG(PERCENT_DESCONTO),2) AS MEDIA
    FROM TRABALHO_QUERY_NF
   GROUP BY COD_PROD;

--LETRA L
SELECT ID_NF, QTD_ITENS
    FROM (SELECT ID_NF, COUNT(ID_ITEM) AS QTD_ITENS
            FROM TRABALHO_QUERY_NF
            GROUP BY ID_NF) AS COUNT_QTD_ITEM_NF
   WHERE  QTD_ITENS > 3; 